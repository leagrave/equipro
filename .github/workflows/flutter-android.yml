name: CI_CD_Flutter_Render

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:
    inputs:
      version:
        description: 'New Release'
        required: false
        default: ''
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  actions: write
  checks: write

jobs:
  setup_flutter:
    name: Setup Flutter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
      - name: Flutter doctor
        run: flutter doctor -v
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test --coverage
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/


  flutter_analyze_test:
    name: Analyze & Test
    runs-on: ubuntu-latest
    needs: setup_flutter
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze code
        run: flutter analyze
      - name: Run tests
        run: flutter test --coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  build_app:
    name: Build Flutter App
    runs-on: ubuntu-latest
    needs: flutter_analyze_test
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
      - run: flutter pub get
      - run: flutter build apk --release
      - if: runner.os == 'macOS'
        run: flutter build ios --release

  # deploy_render:
  #   name: Deploy to Render
  #   runs-on: ubuntu-latest
  #   needs: build_app
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Deploy to Render
  #       env:
  #         RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
  #         RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
  #       run: |
  #         echo "Trigger deployment on Render"
  #         curl -X POST \
  #           -H "Accept: application/json" \
  #           -H "Authorization: Bearer $RENDER_API_KEY" \
  #           -H "Content-Type: application/json" \
  #           https://api.render.com/deploy/srv-$RENDER_SERVICE_ID
