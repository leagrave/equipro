name: CI_CD_Flutter_Render

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:
    inputs:
      version:
        description: 'Type de release'
        required: false
        default: ''
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  actions: write
  checks: write

jobs:
  setup_flutter:
    name: Setup Flutter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
      - name: Flutter doctor
        run: flutter doctor -v
      - run: flutter pub get

  flutter_analyze_test:
    name: Analyze & Test
    runs-on: ubuntu-latest
    needs: setup_flutter
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: flutter pub get
      # - run: flutter analyze --no-fatal-infos --no-fatal-warnings
      - run: flutter test test/integration_test
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  bump_version:
    name: Bump version
    runs-on: ubuntu-latest
    needs: flutter_analyze_test
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
      - name: Read current version
        id: get_version
        run: |
          version=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d+ -f1)
          echo "current_version=$version" >> $GITHUB_ENV
          build_number=$(grep '^version:' pubspec.yaml | awk -F'+' '{print $2}')
          echo "build_number=${build_number:-0}" >> $GITHUB_ENV
      - name: Bump version
        id: bump
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.current_version }}"
          case "${{ github.event.inputs.version }}" in
            major) major=$((major+1)); minor=0; patch=0 ;;
            minor) minor=$((minor+1)); patch=0 ;;
            patch|*) patch=$((patch+1)) ;;
          esac
          build_number=$((build_number+1))
          new_version="${major}.${minor}.${patch}+${build_number}"
          echo "new_version=$new_version" >> $GITHUB_ENV
          sed -i "s/^version:.*/version: $new_version/" pubspec.yaml
          git add pubspec.yaml
          git commit -m "Bump version to $new_version"
          git tag "v$new_version"
          git push origin master --tags

  build_app:
    name: Build Flutter App
    runs-on: ubuntu-latest
    needs: [flutter_analyze_test, bump_version]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
      - run: flutter pub get
      - run: flutter build apk --release
      - if: runner.os == 'macOS'
        run: flutter build ios --release

  deploy_render:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Render
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "Trigger deployment on Render"
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            https://api.render.com/deploy/srv-$RENDER_SERVICE_ID
